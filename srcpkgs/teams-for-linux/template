# Template file for 'teams-for-linux'
pkgname=teams-for-linux
version=1.0.45
revision=1
archs="aarch64 aarch64-musl armv7h armv7h-musl i686 i686-musl x86_64 x86_64-musl"
_electron_ver=19
hostmakedepends="electron${_electron_ver} yarn app-builder"
depends="electron${_electron_ver}"
short_desc="Unofficial Microsoft Teams client for Linux using Electron"
maintainer="TheKeyboard3 <TheKeyboard3@gmail.com>"
license="GPL-3.0-only"
homepage="https://github.com/IsmaelMartinez/teams-for-linux"
distfiles="${homepage}/archive/refs/tags/v${version}.tar.gz"
checksum=0135ab728093ef67a135bd5351e6059e088a18ababf0bec6f17d5cd0b2463039
export USE_SYSTEM_APP_BUILDER=true

do_configure() {
	# we can't make electron skip binary download as that fails in do_build
	# so instead, force a bogus architecture so it downloads its binary
	# artifact, it will use the system one later anyway
	# but this appears to fail on i686, so don't override there

	local carch=x64
	case "$XBPS_TARGET_MACHINE" in
		i686*) carch=ia32 ;;
	esac
	npm_config_arch=$carch \
		yarn upgrade electron@"$(</usr/lib/electron${_electron_ver}/version)" \
			--non-interactive
}

do_build() {
	yarn install --non-interactive --pure-lockfile --cache-folder "${srcdir}/yarn-cache"
	export NODE_ENV=production
	if [[ ${XBPS_TARGET_MACHINE} == "aarch64" ]] || [[ ${XBPS_TARGET_MACHINE} == "aarch64-musl" ]]; then
		yarn electron-builder build --arm64 --linux --dir \
		-c.electronDist=/usr/lib/electron${_electron_ver} \
		-c.electronVersion="$(</usr/lib/electron${_electron_ver}/version)"
	elif [[ ${XBPS_TARGET_MACHINE} == "armv7hf" ]] || [[ ${XBPS_TARGET_MACHINE} == "armv7hf-musl" ]] || [[ ${XBPS_TARGET_MACHINE} == "armv7l" ]] || [[ ${XBPS_TARGET_MACHINE} == "armv7l-musl" ]]; then
		yarn electron-builder build --armv7l --linux --dir \
		-c.electronDist=/usr/lib/electron${_electron_ver} \
		-c.electronVersion="$(</usr/lib/electron${_electron_ver}/version)"
	elif [[ ${XBPS_TARGET_MACHINE} == "i686" ]] || [[ ${XBPS_TARGET_MACHINE} == "i686-musl" ]]; then
		yarn electron-builder build --ia32 --linux --dir \
		-c.electronDist=/usr/lib/electron${_electron_ver} \
		-c.electronVersion="$(</usr/lib/electron${_electron_ver}/version)"
	elif [[ ${XBPS_TARGET_MACHINE} == "x86_64" ]] || [[ ${XBPS_TARGET_MACHINE} == "x86_64-musl" ]]; then
		yarn electron-builder build --x64 --linux --dir \
		-c.electronDist=/usr/lib/electron${_electron_ver} \
		-c.electronVersion="$(</usr/lib/electron${_electron_ver}/version)"
	fi
}

do_install() {
	if [[ ${XBPS_TARGET_MACHINE} == "aarch64" ]] || [[ ${XBPS_TARGET_MACHINE} == "aarch64-musl" ]]; then
		_unpacked_dirname="linux-arm64-unpacked"
	elif [[ ${XBPS_TARGET_MACHINE} == "armv7hf" ]] || [[ ${XBPS_TARGET_MACHINE} == "armv7hf-musl" ]] || [[ ${XBPS_TARGET_MACHINE} == "armv7l" ]] || [[ ${XBPS_TARGET_MACHINE} == "armv7l-musl" ]]; then
		_unpacked_dirname="linux-armv7l-unpacked"
	elif [[ ${XBPS_TARGET_MACHINE} == "i686" ]] || [[ ${XBPS_TARGET_MACHINE} == "i686-musl" ]]; then
		_unpacked_dirname="linux-ia32-unpacked"
	elif [[ ${XBPS_TARGET_MACHINE} == "x86_64" ]] || [[ ${XBPS_TARGET_MACHINE} == "x86_64-musl" ]]; then
		_unpacked_dirname="linux-unpacked"
	fi
	vinstall "${FILESDIR}/teams-for-linux.desktop" 644 usr/share/applications
	vinstall build/icons/512x512.png 644 usr/share/icons/hicolor/512x512/apps teams-for-linux.png
	cat > teams-for-linux <<-EOF
	#!/bin/sh
	exec electron${_electron_ver} /usr/lib/${pkgname}.asar "\$@"
	EOF
	vbin teams-for-linux
	vinstall "dist/${_unpacked_dirname}/resources/app.asar"  644 /usr/lib teams-for-linux.asar
}
